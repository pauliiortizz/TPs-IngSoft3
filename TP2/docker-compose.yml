version: '3.8'

services:
  # QA Environment
  backend-qa:
    image: delfisalinasmich/weblearn-backend:v1.0
    container_name: weblearn-backend-qa
    ports:
      - "8081:8080"
    env_file:
      - .env.qa
    environment:
      - ENVIRONMENT=qa
      - GIN_MODE=debug
    depends_on:
      - db-qa
    networks:
      - qa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend-qa:
    image: delfisalinasmich/weblearn-frontend:v1.0
    container_name: weblearn-frontend-qa
    ports:
      - "8001:80"
    env_file:
      - .env.qa
    environment:
      - REACT_APP_ENV=qa
      - REACT_APP_API_URL=http://localhost:8081
    depends_on:
      - backend-qa
    networks:
      - qa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  db-qa:
    image: mysql:8.0
    container_name: weblearn-db-qa
    ports:
      - "3308:3306"
    env_file:
      - .env.qa
    volumes:
      - mysql_data_qa:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - qa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PROD Environment
  backend-prod:
    image: delfisalinasmich/weblearn-backend:v1.0
    container_name: weblearn-backend-prod
    ports:
      - "8082:8080"
    env_file:
      - .env.prod
    environment:
      - ENVIRONMENT=production
      - GIN_MODE=release
    depends_on:
      - db-prod
    networks:
      - prod-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend-prod:
    image: delfisalinasmich/weblearn-frontend:v1.0
    container_name: weblearn-frontend-prod
    ports:
      - "8002:80"
    env_file:
      - .env.prod
    environment:
      - REACT_APP_ENV=production
      - REACT_APP_API_URL=http://localhost:8082
    depends_on:
      - backend-prod
    networks:
      - prod-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  db-prod:
    image: mysql:8.0
    container_name: weblearn-db-prod
    ports:
      - "3309:3306"
    env_file:
      - .env.prod
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - prod-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mysql_data_qa:
    driver: local
  mysql_data_prod:
    driver: local

networks:
  qa-network:
    driver: bridge
    name: weblearn-qa-network
  prod-network:
    driver: bridge
    name: weblearn-prod-network
